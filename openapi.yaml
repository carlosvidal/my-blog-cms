openapi: 3.1.0
info:
  title: Astro Blog API
  description: API for managing blog posts and user interactions
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Development server

paths:
  /posts:
    get:
      summary: Get all blog posts
      responses:
        '200':
          description: List of blog posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Create a new blog post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post created successfully

  /media/upload:
    post:
      summary: Subir im치genes
      tags: [Media]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Im치genes subidas y convertidas exitosamente
        '400':
          description: No se proporcion칩 ninguna imagen
        '500':
          description: Error al procesar la imagen

  /posts/{id}:
    get:
      summary: Get a specific blog post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Blog post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

  /settings:
    get:
      summary: Obtener configuraciones del blog
      responses:
        '200':
          description: Configuraciones del blog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogSettings'
        '500':
          description: Error al obtener configuraciones
    put:
      summary: Actualizar configuraciones del blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogSettings'
      responses:
        '200':
          description: Configuraciones actualizadas
        '400':
          description: Plantilla no v치lida
        '500':
          description: Error al actualizar configuraciones

  /series:
    get:
      summary: Obtener todas las series
      responses:
        '200':
          description: Lista de series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Series'
        '500':
          description: Error al obtener series
    post:
      summary: Crear una nueva serie
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Series'
      responses:
        '200':
          description: Serie creada exitosamente
        '400':
          description: Error en los datos proporcionados
        '500':
          description: Error al crear la serie
          
  /series/uuid/{uuid}:
    get:
      summary: Obtener una serie por UUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles de la serie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
        '404':
          description: Serie no encontrada
        '500':
          description: Error al obtener la serie
    put:
      summary: Actualizar una serie
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Series'
      responses:
        '200':
          description: Serie actualizada exitosamente
        '400':
          description: Error en los datos proporcionados
        '404':
          description: Serie no encontrada
        '500':
          description: Error al actualizar la serie
    delete:
      summary: Eliminar una serie
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Serie eliminada exitosamente
        '404':
          description: Serie no encontrada
        '500':
          description: Error al eliminar la serie
          
  /series/uuid/{uuid}/posts:
    post:

  /payments/notifications:
    post:
      summary: Handle payment notifications
      tags: [Payments]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentNotification'
      responses:
        '200':
          description: Notification received successfully
        '400':
          description: Invalid notification format
        '500':
          description: Error processing notification

  /subscriptions:
    post:
      summary: Create a new subscription
      tags: [Subscriptions]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPlan'
      responses:
        '201':
          description: Subscription created successfully
        '400':
          description: Invalid subscription data
        '500':
          description: Error creating subscription

  /subscriptions/{id}:
    get:
      summary: Get subscription details
      tags: [Subscriptions]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'
        '404':
          description: Subscription not found
        '500':
          description: Error getting subscription

    put:
      summary: Update subscription plan
      tags: [Subscriptions]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPlan'
      responses:
        '200':
          description: Subscription updated successfully
        '400':
          description: Invalid subscription data
        '404':
          description: Subscription not found
        '500':
          description: Error updating subscription

  /subscriptions/{id}/upgrade:
    post:
      summary: Upgrade user subscription plan
      tags: [Subscriptions]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan:
                  type: string
                  enum: [FREE, PRO]
                interval:
                  type: string
                  enum: [monthly, yearly]
      responses:
        '200':
          description: Subscription upgraded successfully
        '400':
          description: Invalid upgrade data
        '404':
          description: Subscription not found
        '500':
          description: Error upgrading subscription

  /subscriptions/{id}/cancel:
    post:
      summary: Cancel user subscription
      tags: [Subscriptions]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription cancelled successfully
        '404':
          description: Subscription not found
        '500':
          description: Error cancelling subscription

  /subscriptions/{id}/status:
    get:
      summary: Get subscription status
      tags: [Subscriptions]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [ACTIVE, CANCELED, PENDING]
                  next_payment_date:
                    type: string
                    format: date-time
        '404':
          description: Subscription not found
        '500':
          description: Error getting subscription status

  /subscriptions/create-preference:
    post:
      summary: Create MercadoPago payment preference
      tags: [Subscriptions]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan:
                  type: string
                  enum: [FREE, PRO]
                interval:
                  type: string
                  enum: [monthly, yearly]
      responses:
        '200':
          description: Payment preference created
          content:
            application/json:
              schema:
                type: object
                properties:
                  preference_id:
                    type: string
                  init_point:
                    type: string
        '400':
          description: Invalid request data
        '500':
          description: Error creating payment preference
      summary: A침adir un post a una serie
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: integer
                sequenceNumber:
                  type: integer
      responses:
        '200':
          description: Post a침adido a la serie exitosamente
        '400':
          description: Error en los datos proporcionados
        '404':
          description: Serie o post no encontrado
        '500':
          description: Error al a침adir el post a la serie
          
  /profile:
    put:
      summary: Actualizar perfil de usuario
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: Perfil actualizado
        '401':
          description: Contrase침a actual incorrecta
        '404':
          description: Usuario no encontrado
        '500':
          description: Error al actualizar el perfil

components:
  schemas:
    PaymentNotification:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        currency:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
    SubscriptionPlan:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
        currency:
          type: string
        interval:
          type: string
          enum: [monthly, yearly]
        features:
          type: array
          items:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        uuid:
          type: string
        title:
          type: string
        content:
          type: string
        excerpt:
          type: string
        slug:
          type: string
        image:
          type: string
        status:
          type: string
          enum: [DRAFT, PUBLISHED]
        author:
          $ref: '#/components/schemas/Admin'
        category:
          $ref: '#/components/schemas/Category'
        series:
          $ref: '#/components/schemas/Series'
        sequenceNumber:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    BlogSettings:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          description: T칤tulo principal del blog
        description:
          type: string
          description: Descripci칩n breve del blog
        language:
          type: string
          enum: [es, en]
        template:
          type: string
          enum: [default, minimal, professional]
        domain:
          type: string
        googleAnalyticsId:
          type: string
        socialNetworks:
          type: object
          properties:
            facebook:
              type: string
            instagram:
              type: string
            x:
              type: string
            linkedin:
              type: string
            youtube:
              type: string
            github:
              type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Series:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        coverImage:
          type: string
        author:
          $ref: '#/components/schemas/Admin'
        posts:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              uuid:
                type: string
              title:
                type: string
              slug:
                type: string
              sequenceNumber:
                type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          
    Admin:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
        name:
          type: string
        email:
          type: string
        bio:
          type: string
        picture:
          type: string
        role:
          type: string
          enum: [ADMIN, AUTHOR]
          
    Category:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
        name:
          type: string
        slug:
          type: string
          
    Profile:
      type: object
      properties:
        id:
          type: integer
        bio:
          type: string
        picture:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
